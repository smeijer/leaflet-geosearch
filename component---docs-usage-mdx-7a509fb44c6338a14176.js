(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{k2q9:function(e,t,r){"use strict";r.r(t),r.d(t,"_frontmatter",(function(){return b})),r.d(t,"default",(function(){return m}));var a=r("Fcif"),n=r("+I+c"),o=(r("mXGw"),r("/FXl")),l=r("TjRS"),c=r("KUxS"),p=r("yYOO"),s=r("lEln"),i=(r("aD51"),["components"]),b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!Object.prototype.hasOwnProperty.call(b,"__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/usage.mdx"}});var d={_frontmatter:b},u=l.a;function m(e){var t,r,m=e.components,f=Object(n.a)(e,i);return Object(o.b)(u,Object(a.a)({},d,f,{components:m,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"usage"},"Usage"),Object(o.b)("p",null,"There are two ways in which ",Object(o.b)("inlineCode",{parentName:"p"},"leaflet-geosearch")," can be used. Direct usage, for example for address forms, or embedded in a leaflet map to search for points of interest."),Object(o.b)("h2",{id:"using-the-providers-directly"},"Using the providers directly"),Object(o.b)("p",null,"All providers can be used without leaflet. You might want to bind them to a form;"),Object(o.b)(c.a,{__position:0,__code:'<Search provider="OpenStreetMap" />',__scope:(t={props:f,DefaultLayout:l.a,Playground:c.a,Map:p.a,Search:s.a},t.DefaultLayout=l.a,t._frontmatter=b,t),mdxType:"Playground"},Object(o.b)(s.a,{provider:"OpenStreetMap",mdxType:"Search"})),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { OpenStreetMapProvider } from 'leaflet-geosearch';\n\nconst provider = new OpenStreetMapProvider();\nconst results = await provider.search({ query: input.value });\n")),Object(o.b)("h2",{id:"using-the-leaflet-control"},"Using the leaflet control"),Object(o.b)("p",null,"Or add the ",Object(o.b)("inlineCode",{parentName:"p"},"GeoSearchControl")," to the leaflet map instance, to render a search control on your map;"),Object(o.b)("p",null,"See ",Object(o.b)("a",{parentName:"p",href:"/leaflet-geosearch/leaflet-control"},"Leaflet Control")," for more info about the the options this control provides."),Object(o.b)(c.a,{__position:1,__code:'<Map provider="OpenStreetMap" />',__scope:(r={props:f,DefaultLayout:l.a,Playground:c.a,Map:p.a,Search:s.a},r.DefaultLayout=l.a,r._frontmatter=b,r),mdxType:"Playground"},Object(o.b)(p.a,{provider:"OpenStreetMap",mdxType:"Map"})),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { GeoSearchControl, OpenStreetMapProvider } from 'leaflet-geosearch';\n\nconst searchControl = new GeoSearchControl({\n  provider: new OpenStreetMapProvider(),\n  style: 'bar',\n});\n\nmap.addControl(searchControl);\n")),Object(o.b)("h2",{id:"results"},"Results"),Object(o.b)("p",null,"The search event of all providers return an array of ",Object(o.b)("inlineCode",{parentName:"p"},"result")," objects. The base structure is uniform between the providers. It contains objects matching the following interface:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"interface result {\n  x: number; // lon\n  y: number; // lat\n  label: string; // formatted address\n  bounds: [\n    [number, number], // south, west - lat, lon\n    [number, number], // north, east - lat, lon\n  ];\n  raw: any; // raw provider result\n}\n")))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!Object.prototype.hasOwnProperty.call(m,"__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/usage.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-usage-mdx-7a509fb44c6338a14176.js.map