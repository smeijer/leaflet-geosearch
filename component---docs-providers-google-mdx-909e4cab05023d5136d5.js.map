{"version":3,"sources":["webpack:///../docs/providers/google.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Map","provider","isMDXComponent"],"mappings":"6SAUaA,EAAe,Q,iOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,mBADR,mBAGA,qBAAG,sBAAQC,WAAW,KAAI,8BAA1B,oDAAuG,kBAAIA,WAAW,KAAf,QAAvG,QAAgJ,sBAAQA,WAAW,KAAnB,iBAAhJ,aACE,sBAAQA,WAAW,KAAnB,uBADF,uCACiG,iBAAGA,WAAW,IAC3G,KAAQ,2EADqF,eADjG,mDAIM,iBAAGA,WAAW,IAChB,KAAQ,wEADN,8BAJN,KAOA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4BAA+BC,SAAO,GACvEL,QACAH,kBACAS,eACAC,SAJuE,gBAKvEV,IALuE,EAMvEH,eANuE,GAOtEO,QAAQ,cACb,YAAC,IAAD,CAAKO,SAAS,SAASP,QAAQ,SAE7B,uBAAK,oBAAMC,WAAW,MAClB,UAAa,eADZ,2SAgBL,kBACE,GAAM,uBADR,uBAGA,oDAAmC,iBAAGA,WAAW,IAC7C,KAAQ,4EADuB,uBAAnC,6DAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,+MAUL,kBACE,GAAM,4BADR,4BAGA,kBACE,GAAM,+CADR,iDAGA,sGAAqF,kBAAIA,WAAW,KAAf,UAArF,mOAA2V,iBAAGA,WAAW,IACrW,KAAQ,8DAD+U,qBAA3V,KAGA,kBACE,GAAM,6BADR,+BAGA,qRAAoQ,kBAAIA,WAAW,KAAf,QAApQ,QAA6S,sBAAQA,WAAW,KAAnB,iBAA7S,YAA2W,sBAAQA,WAAW,KAAnB,uBAA3W,2D,+NAKJJ,EAAWW,gBAAiB","file":"component---docs-providers-google-mdx-909e4cab05023d5136d5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/leaflet-geosearch/leaflet-geosearch/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Playground from '../components/Playground';\nimport Map from '../components/Map';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"google-provider\"\n    }}>{`Google Provider`}</h1>\n    <p><strong parentName=\"p\"><u>{`note`}</u></strong>{`: Google services require an API key enabled for `}<em parentName=\"p\">{`both`}</em>{` the `}<strong parentName=\"p\">{`Geocoding API`}</strong>{` and\nthe `}<strong parentName=\"p\">{`Maps JavaScript API`}</strong>{` (more on key configuration below). `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/maps/documentation/javascript/get-api-key\"\n      }}>{`Obtain here`}</a>{`. For more options and configurations,\nsee the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/maps/documentation/javascript/overview\"\n      }}>{`Google Maps developer docs`}</a>{`.`}</p>\n    <Playground __position={0} __code={'<Map provider=\\\"Google\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Map,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Map provider=\"Google\" mdxType=\"Map\" />\n    </Playground>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { GoogleProvider } from 'leaflet-geosearch';\n\nconst provider = new GoogleProvider({ apiKey: '__YOUR_GOOGLE_KEY__' });\n\n// add to leaflet\nimport { GeoSearchControl } from 'leaflet-geosearch';\n\nmap.addControl(\n  new GeoSearchControl({\n    provider,\n    style: 'bar',\n  }),\n);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"optional-parameters\"\n    }}>{`Optional parameters`}</h2>\n    <p>{`Google supports a number of `}<a parentName=\"p\" {...{\n        \"href\": \"https://googlemaps.github.io/js-api-loader/interfaces/LoaderOptions.html\"\n      }}>{`optional parameters`}</a>{` which must be specified when loading the JavaScript API.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const params = {\n  apiKey: '__YOUR_GOOGLE_KEY__',\n  language: 'nl', // render results in Dutch\n  region: 'nl', // prioritize matches within The Netherlands\n};\n\nnew GoogleProvider({ ...params });\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"configuring-your-api-key\"\n    }}>{`Configuring your API key`}</h2>\n    <h3 {...{\n      \"id\": \"application-restrictions-highly-recommended\"\n    }}>{`Application restrictions (highly recommended)`}</h3>\n    <p>{`Because your API key will be exposed with each request from the client, it is `}<em parentName=\"p\">{`highly`}</em>{` recommended that you should add an application restriction to any of your public-facing keys to limit the HTTP referrers from which requests will be accepted - for more information on how to configure this restriction, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://cloud.google.com/docs/authentication/api-keys#http\"\n      }}>{`the documentation`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"api-restrictions-optional\"\n    }}>{`API restrictions (optional)`}</h3>\n    <p>{`Your may choose not to apply any API restrictions to your key, leaving it in an \"Unrestricted\" state. However, if you do wish to limit the APIs that can be accessed with your key, you will need to make sure that it as configured to at least make use of `}<em parentName=\"p\">{`both`}</em>{` the `}<strong parentName=\"p\">{`Geocoding API`}</strong>{` and the `}<strong parentName=\"p\">{`Maps JavaScript API`}</strong>{` in order for web client-based geocoding to work.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}