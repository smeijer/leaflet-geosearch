(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{A4eJ:function(e,t,r){"use strict";r.r(t),r.d(t,"_frontmatter",(function(){return c})),r.d(t,"default",(function(){return d}));var a=r("Fcif"),o=r("+I+c"),n=(r("mXGw"),r("/FXl")),s=r("TjRS"),i=r("KUxS"),l=r("yYOO"),p=(r("aD51"),["components"]),c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!Object.prototype.hasOwnProperty.call(c,"__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/providers/pelias.mdx"}});var u={_frontmatter:c},b=s.a;function d(e){var t,r=e.components,d=Object(o.a)(e,p);return Object(n.b)(b,Object(a.a)({},u,d,{components:r,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"pelias-provider"},"Pelias Provider"),Object(n.b)("p",null,Object(n.b)("a",{parentName:"p",href:"https://github.com/pelias/pelias"},"Pelias")," is an open-source geocoder powered completely by open data, available freely to everyone."),Object(n.b)("p",null,"In order to use this provider you'll need to have your own Pelias server running."),Object(n.b)("p",null,"The ",Object(n.b)("a",{parentName:"p",href:"https://github.com/pelias/docker"},"Docker")," repository provides the quickest path to running your own server."),Object(n.b)("p",null,"See the ",Object(n.b)("a",{parentName:"p",href:"https://github.com/pelias/documentation"},"Pelias documentation")," for more detailed information about the available endpoints and query parameters."),Object(n.b)("p",null,"Looking for a hosted version of Pelias? check out the Geocode Earth provider."),Object(n.b)(i.a,{__position:0,__code:'<Map provider="Pelias" />',__scope:(t={props:d,DefaultLayout:s.a,Playground:i.a,Map:l.a},t.DefaultLayout=s.a,t._frontmatter=c,t),mdxType:"Playground"},Object(n.b)(l.a,{provider:"Pelias",mdxType:"Map"})),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},"import { PeliasProvider } from 'leaflet-geosearch';\n\n// Pelias servers are self-hosted so you'll need to configure the 'options.host' string\n// to identify where requests to your running pelias/api server instance should be sent.\n// note: you SHOULD include the scheme, domain and port but NOT any path or parameters.\nconst provider = new PeliasProvider({ host: 'http://localhost:4000' });\n\n// add to leaflet\nimport { GeoSearchControl } from 'leaflet-geosearch';\n\nmap.addControl(\n  new GeoSearchControl({\n    provider,\n    style: 'bar',\n  }),\n);\n")),Object(n.b)("h2",{id:"optional-parameters"},"Optional parameters"),Object(n.b)("p",null,"Pelias supports a wide range of number of ",Object(n.b)("a",{parentName:"p",href:"https://github.com/pelias/documentation/blob/master/autocomplete.md"},"optional parameters")," which can be applied to every request using the ",Object(n.b)("inlineCode",{parentName:"p"},"params")," object:"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},"const provider = new PeliasProvider({\n  params: {\n    size: 5, // limit the total number of results returned\n    lang: 'nl', // render results in Dutch\n    'boundary.country': 'NL', // limit search results to the Netherlands\n    layers: 'address,street', // limmit which layers are queried\n  },\n});\n")),Object(n.b)("p",null,"Or individually on a per-request basis:"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-js"},"const results = await provider.search({\n  query: {\n    text: 'example',\n    'focus.point.lat': 1.11, // score results nearer to the focus point higher\n    'focus.point.lon': 2.22,\n  },\n});\n")))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!Object.prototype.hasOwnProperty.call(d,"__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/providers/pelias.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-providers-pelias-mdx-3da31685d72675adc902.js.map